name: CMake Qt Cross-Platform Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        qt_version: ['6.5.3']
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt_version }}
        host: ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'mac' }}
        target: desktop
        modules: 'qtnetworkauth qtmultimedia'
        cache: true

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgl1-mesa-dev

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
              -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
              -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test (if tests exist)
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      shell: bash
      run: |
        if [ -f "CTestTestfile.cmake" ]; then
          ctest --build-config ${{ matrix.build_type }} --output-on-failure
        else
          echo "No tests found, skipping test step"
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CyberScanner-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          ${{ steps.strings.outputs.build-output-dir }}/CyberScanner*
          ${{ steps.strings.outputs.build-output-dir }}/**/*.exe
          ${{ steps.strings.outputs.build-output-dir }}/**/*.app
          ${{ steps.strings.outputs.build-output-dir }}/**/*.dmg
